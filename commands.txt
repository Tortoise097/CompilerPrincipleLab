docker stop exciting_kare
docker restart exciting_kare
docker exec -it exciting_kare bash

docker cp D:\CompilerDesign\CompilerPrincipleLab\test\ exciting_kare:/root/zlj/CompilerPrincipleLab\

docker cp D:\CompilerDesign\TestFiles\test2\ exciting_kare:/root/


docker cp exciting_kare:/root/hyb_compiler/SharedFiles/test6_7/  D:\CompilerDesign\SharedFiles\
docker cp exciting_kare:/root/hyb_compiler/SharedFiles/hello.koopa D:\CompilerDesign\SharedFiles\ 
docker cp exciting_kare:/root/hyb_compiler/SharedFiles/expr.koopa D:\CompilerDesign\SharedFiles\ 

docker cp D:\CompilerDesign\CompilerPrincipleLab\ exciting_kare:/root/zlj/

docker cp D:\CompilerDesign\CompilerPrincipleLab\test\ exciting_kare:/root/zlj/CompilerPrincipleLab\
docker cp exciting_kare:/root/zlj/CompilerPrincipleLab/test2/04_var.koopa D:\CompilerDesign\CompilerPrincipleLab\test2


docker cp exciting_kare:/root/zlj/CompilerPrincipleLab/test/5_scope.koopa D:\CompilerDesign\CompilerPrincipleLab\test\



// linux 删除整个文件夹：
rm -rf ./SharedFiles/
rm -rf ./CompilerPrincipleLab/

//make相关：
//在项目文件夹（在这里就是SharedFiles）里执行make，自动编译
make
//可以用来测试是否可以成功make，如果有错误make不成功。


//test 相关：
//autotest command(不需要make)
//lv1:
make

./build/compiler -riscv ./test/0_main.c -o ./test/0_main.S

./build/compiler -koopa ./test/03_while_true.c -o ./test/03_while_true.koopa

autotest -koopa -s lv1 ./
autotest -koopa -s lv6 ./

autotest -riscv -s lv1 ./

autotest -riscv -s lv9 /home/CompilerDesignLab/TestFiles/SharedFiles
autotest -riscv /home/CompilerDesignLab/TestFiles/SharedFiles
autotest -koopa /home/CompilerDesignLab/TestFiles/SharedFiles
autotest -koopa -s lv9 /home/CompilerDesignLab/TestFiles/SharedFiles